<!DOCTYPE html>
<meta charset="utf-8">
<svg width="960" height="500"></svg>
<script src="//d3js.org/d3.v4.min.js"></script>
<script>

var svg = d3.select("svg"),
    margin = {top: 20, right: 20, bottom: 30, left: 50},
    width = svg.attr("width") - margin.left - margin.right,
    height = svg.attr("height") - margin.top - margin.bottom;

var x = d3.scaleLinear().range([0, width]),
    z = d3.scaleOrdinal()
    .domain(['surprise', 'fear', 'disgust', 'anger', 'contempt', 'happiness', 'neutral', 'sadness'])
    .range(['orange', 'black', 'green', 'red', 'purple', 'yellow', 'gray', 'blue']);

var g = svg.append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

d3.csv("result_raiders_8.csv", type, function(error, data) {
  if (error) throw error;

  var keys = data.columns.slice(1);

  x.domain(d3.extent(data, function(d) { return d.frame; }));
  z.domain(keys);

  compactData = [];
  


  var layer = g.selectAll(".layer")
    .data(data)
    .enter().append("g")
      .attr("class", "layer")
      .append("line")
      .style("stroke", function (d) {
          var maxKey = null;
          for (var i = 0; i < keys.length; i++) {
              if (d[keys[i]] && (maxKey == null || d[keys[i]] > d[maxKey])) {
                  maxKey = keys[i];
              }
          }

          return maxKey == null ? "white" : z(maxKey);
        })
      .attr("x1", function (d) { return x(d.frame); })
      .attr("x2", function (d) { return x(d.frame); })
      .attr("y1", function (d) { return 10; })
      .attr("y2", function (d) { return 30;});

  g.append("g")
      .attr("transform", "translate(0," + height + ")")
      .call(d3.axisBottom(x));
});

function type(d, i, columns) {
  for (var i = 0, n = columns.length; i < n; ++i) d[columns[i]] = +d[columns[i]];
  return d;
}

</script>